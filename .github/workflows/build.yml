name: Build

on:
  push:
    branches: [ collectd-6.0 ]
  pull_request:
    branches: [ collectd-6.0 ]

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    container: collectd/ci:${{ matrix.container_tag }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        container_tag:
          # debian family
          - bookworm_amd64
          - bullseye_amd64
          - buster_amd64
          # Ubuntu
          - mantic_amd64
          - jammy_amd64
          - focal_amd64
          - bionic_amd64
          # RedHat family
          - el9_x86_64
          - fedora39
          - fedora38_x86_64
        configure_flags: ['']
        include:
          - container_tag: bookworm_amd64
            configure_flags: '--enable-debug'
          - container_tag: bookworm_amd64
            # By default clang emits DWARF v5, which Valgrind cannot read yet.
            # https://github.com/llvm/llvm-project/issues/56550
            configure_flags: 'CC=clang CXX=clang++ CFLAGS=-gdwarf-4'
    env:
      CONFIGURE_FLAGS: ${{ matrix.configure_flags }}
      # this env var picked up by valgrind during make check phase
      VALGRIND_OPTS: "--errors-for-leak-kinds=definite"
    steps:
    - uses: actions/checkout@v2
    - run: type pkg-config
    - run: pkg-config --list-all | sort -u
    - name: Generate configure script
      run:
        ./build.sh
    - name: Run configure script
      run: ./configure $CONFIGURE_FLAGS
    - name: Upload config.log
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.container_tag }}
        path: config.log
    - name: Build collectd
      run: make -j$(nproc) -sk
    - name: Run make check
      run: |
        set +e
        make $MAKEFLAGS check
        echo "$?" >make-check.status
      continue-on-error: true
    - name: Upload log files
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.container_tag }}
        path: "*.log"
    - name: Report check status
      run: exit $(< make-check.status)

  experimental:
    runs-on: ubuntu-20.04
    container: collectd/ci:${{ matrix.container_tag }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # for tasks that are optional, use the continue-on-error option, to prevent a workflow from failing when the task fails
        container_tag:
          - debian_unstable
          - fedora_rawhide_x86_64
        # Add additional per-distro vars here.
        include:
          - container_tag: debian_unstable
            configure_flags: "--disable-dpdkstat --disable-dpdkevents --disable-virt"
          - container_tag: fedora_rawhide_x86_64
            cflags: "-fPIE -Wno-deprecated-declarations"
            cppflags: "-fPIE -Wno-deprecated-declarations"
            configure_flags: "--disable-dpdkstat --disable-dpdkevents --disable-virt --disable-xmms"
    env:
      CFLAGS: ${{ matrix.cflags }}
      CPPFLAGS: ${{ matrix.cppflags }}
      CONFIGURE_FLAGS: ${{ matrix.configure_flags }}
      VALGRIND_OPTS: "--errors-for-leak-kinds=definite"
    steps:
    - uses: actions/checkout@v2
    - run: type pkg-config
    - run: pkg-config --list-all | sort -u
    - name: Generate configure script
      run:
        ./build.sh
    - name: Run configure script
      run: ./configure $CONFIGURE_FLAGS
    - name: Upload config.log
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.container_tag }}
        path: config.log
    - name: Build collectd
      run: make -j$(nproc) -sk
    - name: Run make check
      run: |
        set +e
        make $MAKEFLAGS check
        echo "$?" >make-check.status
      continue-on-error: true
    - name: Upload log files
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.container_tag }}
        path: "*.log"
    - name: Report check status
      run: exit $(< make-check.status)
